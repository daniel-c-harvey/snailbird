@using NetBlocks.Models.Environment
@using SnailbirdData.Models.Post
@using SnailbirdMedia.Clients
@using SnailbirdMedia.Configs
@using SnailbirdMedia.Models

<div>
    <div class="image-preview-container">
        <img class="image-preview"
             src="@vault.DataURL(Image)"
             alt="@FlexImage.AltText" />
    </div>
    <div class="image-details">
        <div class="image-text">
            Image URI
            <input class="form-control" 
                   type="text" 
                   @bind:get="@FlexImage.ImageURI"
                   @bind:set="SetImageURI" />
            Alt Text
            <input class="form-control" 
                   type="text" 
                   @bind="@FlexImage.AltText" />
        </div>
        <InputFile OnChange="OnImageFileChanged" >
            <span class="bg-info bi-folder-2" />
        </InputFile>
    </div>
</div>

@code 
{
    [Inject]
    public IEndpoints Endpoints { get; set; } = default!;
    [Parameter]
    public FlexImage FlexImage { get; set; } = default!;
    protected MediaBinary? Image { get; set; }

    private VaultManagerClient vault = default!;

    protected async override void OnInitialized()
    {
        vault = new(new VaultClientConfig(Endpoints.MediaApiUrl, Endpoints.MediaApiKey, "img"));
        await OnImageURIChanged();
        base.OnInitialized();
    }

    private async void OnImageFileChanged(InputFileChangeEventArgs e)
    {
        // serialize the image to display before committing.
    }

    private async Task SetImageURI(string value)
    {
        FlexImage.ImageURI = value;
        await OnImageURIChanged();
    }

    private async Task OnImageURIChanged()
    {
        if (!string.IsNullOrWhiteSpace(FlexImage.ImageURI)) {
            Image = await vault.GetMedia(FlexImage.ImageURI);
        }
    }
}