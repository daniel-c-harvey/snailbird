@using SnailbirdData.DataAdapters
@using SnailbirdData.Models.Post;
@using SnailbirdAdmin.Models;
@using SnailbirdAdmin.ViewModels;
@using RazorCore;

@* <PostManagerBase TView="FlexPostManagerViewModel" 
                 TPost="FlexPost" 
                 TEdit="EditFlexPostViewModel" 
                 ViewModel="ViewModel">
    <ViewComponent>
        <FlexTable models="ViewModel.Model.Posts"
                   TModel="FlexPost"
                   />
    </ViewComponent>
    <AddComponent>
        <EditFlexPost ViewModel="EditViewModel" />
    </AddComponent>
    <EditComponent>
        <EditFlexPost ViewModel="AddViewModel" />
    </EditComponent>
</PostManagerBase>
 *@
<PostManager TPost="FlexPost" 
             TEdit="EditFlexPostViewModel" 
             ViewModel="@ViewModel"
             AddViewModel="@AddViewModel"
             EditViewModel="@EditViewModel">
    <AddComponent Context="viewModel">
        <EditFlexPost ViewModel="viewModel" />
    </AddComponent>
    <EditComponent Context="viewModel">
        <EditFlexPost ViewModel="viewModel" />
    </EditComponent>
</PostManager>

@code
{
    [Inject]
    public IDataAdapter<FlexPost>? PostAdapter { get; set; }

    public FlexPostManagerViewModel? ViewModel { get; set; }

    protected EditFlexPostViewModel? EditViewModel { get; set; }
    protected EditFlexPostViewModel? AddViewModel { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (PostAdapter is null) throw new ArgumentNullException(nameof(PostAdapter));
        ViewModel = new(PostAdapter);

        if (ViewModel.Model is null) throw new ArgumentNullException(nameof(ViewModel.Model));
        EditViewModel = new(ViewModel.SavePost);
        AddViewModel = new(ViewModel.SaveNewPost);
    }
}