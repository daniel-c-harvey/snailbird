@typeparam TPostModel where TPostModel : SnailbirdData.Models.Post.Post<TPostModel>, new()

@if (Post != null)
{
    <div class="post" id="@Post.ID">
        @if (Post is SnailbirdData.Models.Post.LiveJamPost)
        {
            var liveJamPost = Post as SnailbirdData.Models.Post.LiveJamPost;
            <LiveJamPost Post="@liveJamPost" OnSelect="post => OnSelectPost(post as TPostModel)" />
        } else if (Post is SnailbirdData.Models.Post.FlexPost<TPostModel>)
        {
            var flexPost = Post as SnailbirdData.Models.Post.FlexPost<TPostModel>;
            <FlexPost TPost="TPostModel" Post="@flexPost" OnSelect="post => OnSelectPost(post as TPostModel)"/>
        }
    </div>
}

@code {
    [Parameter]
    public TPostModel? Post { get; set; }

    [Parameter]
    public EventCallback<TPostModel> OnSelect { get; set; }

    
    private async Task OnSelectPost(TPostModel post)
    {
        if (OnSelect.HasDelegate)
        {
            await OnSelect.InvokeAsync(post);
        }
    }
}
