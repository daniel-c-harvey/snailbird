@using NetBlocks.Models
@using RazorCore.CanvasImage
@using RazorCore.Confirmation
@using SnailbirdAdminWeb.Client.ViewModels.EditFlex.Element;
@using RazorCore.FileInput

<Prompt @ref="_prompt" ViewModel="_promptViewModel" />

<div>
    <div class="image-preview-container">
        <CanvasImage Base64Image="@ViewModel.DataUrl" CssClass="image-preview" />
    </div>
    <div class="image-details">
        <div class="image-text">
            <label for="uri">Image URI</label>
            <input id="uri" class="form-control image-uri" 
                   type="text" 
                   @bind:get="ViewModel.FlexImage.ImageURI"
                   @bind:set="ViewModel.SetImageURI" />
            
            <label>Alt Text</label>
            <input class="form-control" 
                   type="text"
                   @bind="ViewModel.FlexImage.AltText" />
        </div>
        <FileInput ViewModel="FileInputViewModel" OnFileSelected="ViewModel.OnImageSelected"/>
    </div>
</div>

@code 
{
    [Parameter]
    public required EditFlexImageViewModel ViewModel { get; set; }

    private FileInputViewModel FileInputViewModel { get; } = new(10 * 1024 * 1024);

    private Prompt _prompt = default!;
    private static PromptChoice _okChoice = new(1, "Okay", "btn-outline-primary");
    private static IEnumerable<PromptChoice> _choices = [_okChoice];
    private PromptViewModel _promptViewModel = new(_choices);

    protected override void OnInitialized()
    {
        FileInputViewModel.FileValidationFailed += OpenPrompt;
        _promptViewModel.Choices[_okChoice] += ResetImage;
        base.OnInitialized();
    }

    private void ResetImage()
    {
        FileInputViewModel.Reset();
    }

    

    private void OpenPrompt(object? sender, MessageEventArgs e)
    {
        _promptViewModel.PromptMessage = new PromptMessage("Image Validation Failed", e.Message);
        _prompt.Open();
    }
}