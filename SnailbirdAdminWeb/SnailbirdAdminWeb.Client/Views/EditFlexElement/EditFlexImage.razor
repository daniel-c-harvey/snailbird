@using NetBlocks.Models.Environment
@using RazorCore.CanvasImage
@using RazorCore.Confirmation
@using SnailbirdData.Models.Post
@using SnailbirdAdminWeb.Client.ViewModels.EditFlex.Element;
@using SnailbirdMedia.Clients
@using SnailbirdMedia.Configs
@using SnailbirdMedia.Models

<Prompt @ref="prompt" ViewModel="PromptViewModel" />

<div>
    <div class="image-preview-container">
        <CanvasImage Base64Image="@ViewModel.DataURL" CssClass="image-preview" />
    </div>
    <div class="image-details">
        <div class="image-text">
            <label>Image URI</label>
            <input class="form-control image-uri" 
                   type="text" 
                   @bind:get="ViewModel.FlexImage.ImageURI"
                   @bind:set="ViewModel.SetImageURI" />
            
            <label>Alt Text</label>
            <input class="form-control" 
                   type="text" 
                   @bind="ViewModel.FlexImage.AltText" />
        </div>
        <InputFile class="image-chooser" OnChange="OnImageFileChanged" />
    </div>
</div>

@code 
{
    [Parameter]
    public required EditFlexImageViewModel ViewModel { get; set; }
    
    private PromptViewModel PromptViewModel { get; } = new(Choices);
    private Prompt prompt = default!;

    private static PromptChoice okChoice = new PromptChoice(1, "Okay", "btn-outline-primary");

    private static IEnumerable<PromptChoice> Choices = [
        okChoice
    ];

    protected override void OnInitialized()
    {
        ViewModel.ImageSizeExceeded += OpenPrompt;
        PromptViewModel.PromptMessage = new("Image Too Large", "The image exceeds the maximum allowed file size");
        PromptViewModel.Choices[okChoice] += ResetImage;
        base.OnInitialized();
    }

    private void ResetImage()
    {
        // todo
    }

    private async void OnImageFileChanged(InputFileChangeEventArgs e)
    {
        if (e.FileCount == 1)
        {
            try
            {
                if (await ViewModel.OnImageChanged(e.File))
                {
                    
                }
                else
                {
                    // e.
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
            StateHasChanged();
        }
    }

    private void OpenPrompt(object? sender, EventArgs e)
    {
        if (prompt != null)
        {
            prompt.Open();
        }
    }
}