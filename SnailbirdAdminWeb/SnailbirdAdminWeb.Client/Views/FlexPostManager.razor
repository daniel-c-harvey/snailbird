@using SnailbirdAdminWeb.Client.API
@using SnailbirdAdminWeb.Client.ViewModels.EditFlex
@using SnailbirdData.Models.Post;
@using SnailbirdAdminWeb.Client.Models;
@using SnailbirdAdminWeb.Client.ViewModels;
@using RazorCore;

@typeparam TPost where TPost : FlexPost<TPost>, new()

<PostManager TPost="TPost" 
                TEdit="EditFlexPostViewModel<TPost>" 
                ViewModel="@ViewModel"
                AddViewModel="@AddViewModel"
                EditViewModel="@EditViewModel">
    <AddComponent Context="viewModel">
        <EditFlexPost ViewModel="viewModel" />
    </AddComponent>
    <EditComponent Context="viewModel">
        <EditFlexPost ViewModel="viewModel" />
    </EditComponent>
</PostManager>

@code
{
    [Inject]
    public IServiceProvider? Services { get; set; }

    public FlexPostManagerViewModel<TPost>? ViewModel { get; set; }

    protected EditFlexPostViewModel<TPost>? EditViewModel { get; set; }
    protected EditFlexPostViewModel<TPost>? AddViewModel { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (Services is null) throw new ArgumentNullException(nameof(Services));
        var PostManager = Services.GetService<IPostManagerClient<TPost>>();
        if (PostManager != null) {
            ViewModel = new(PostManager);
            if (ViewModel.Model != null)
            {
                EditViewModel = new(ViewModel.SavePost);
                AddViewModel = new(ViewModel.SaveNewPost);
            }

        }

    }
}